{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2016/11/3.\r\n */\r\nmodule.exports = (function(){\r\n\r\n    \"use strict\";\r\n\r\n    console.time('[HttpServer][Start]');\r\n\r\n    //httpЭ��ģ��\r\n    var http = require('http');\r\n    //url����ģ��\r\n    var url = require('url');\r\n    //�ļ�ϵͳģ��\r\n    var fs = require(\"fs\");\r\n    //·������ģ��\r\n    var path = require(\"path\");\r\n\r\n    return {\r\n        //��������\r\n        start:function(){\r\n            var port = this.config.port;\r\n            var ip = this.config.ip;\r\n            //����һ������\r\n            var httpServer = http.createServer(this.processRequest.bind(this));\r\n\r\n            //��ָ���Ķ˿ڼ�������\r\n            httpServer.listen(port,function(){\r\n                console.log(\"[HttpServer][Start]\",\"runing at http://\"+ip+\":\"+port+\"/\");\r\n                console.timeEnd(\"[HttpServer][Start]\");\r\n            });\r\n\r\n            httpServer.on(\"error\", function(error) {\r\n                console.error(error);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * ��������\r\n         * @param request\r\n         * @param response\r\n         */\r\n        processRequest:function(request,response){\r\n            var hasExt = true;\r\n            var requestUrl = request.url;\r\n            var pathName = url.parse(requestUrl).pathname;\r\n\r\n            //��������·�����н��룬��ֹ��������\r\n            pathName = decodeURI(pathName);\r\n\r\n            //����·����û����չ��\r\n            if(path.extname(pathName) === ''){\r\n                //����������/��β�ģ���/����301�ض���\r\n                if (pathName.charAt(pathName.length-1) != \"/\"){\r\n                    pathName += \"/\";\r\n                    var redirect = \"http://\"+request.headers.host + pathName;\r\n                    response.writeHead(301, {\r\n                        location:redirect\r\n                    });\r\n                    response.end();\r\n                }\r\n                //����Ĭ�ϵķ���ҳ��,������ҳ�治һ������,�����ᴦ��\r\n                pathName += \"index.html\";\r\n                hasExt = false; //����Ĭ��ҳ���ǳ����Զ����ӵ�\r\n            }\r\n\r\n            //��ȡ��Դ�ļ�������·��\r\n            var filePath = path.join(\"http/webroot\",pathName);\r\n\r\n            //��ȡ��Ӧ�ļ����ĵ�����\r\n            var contentType = this.getContentType(filePath);\r\n\r\n            //�����ļ�������\r\n            fs.exists(filePath,function(exists){\r\n                if(exists){\r\n                    response.writeHead(200, {\"content-type\":contentType});\r\n                    var stream = fs.createReadStream(filePath,{flags:\"r\",encoding:null});\r\n                    stream.on(\"error\", function() {\r\n                        response.writeHead(500,{\"content-type\": \"text/html\"});\r\n                        response.end(\"<h1>500 Server Error</h1>\");\r\n                    });\r\n                    //�����ļ�����\r\n                    stream.pipe(response);\r\n                }else { //�ļ��������ڵ�����\r\n                    if(hasExt){\r\n                        //���������ļ����ǳ����Զ����ӵģ�ֱ�ӷ���404\r\n                        response.writeHead(404, {\"content-type\": \"text/html\"});\r\n                        response.end(\"<h1>404 Not Found</h1>\");\r\n                    }else {\r\n                        //�����ļ��ǳ����Զ����ӵ��Ҳ����ڣ�����ʾ�û�ϣ�����ʵ��Ǹ�Ŀ¼�µ��ļ��б�\r\n                        var html = \"<head><meta charset='utf-8'></head>\";\r\n\r\n                        try{\r\n                            //�û�����Ŀ¼\r\n                            var filedir = filePath.substring(0,filePath.lastIndexOf('\\\\'));\r\n                            //��ȡ�û�����·���µ��ļ��б�\r\n                            var files = fs.readdirSync(filedir);\r\n                            //������·���µ������ļ�һһ�оٳ����������ӳ����ӣ��Ա��û���һ������\r\n                            for(var i in files){\r\n                                var filename = files[i];\r\n                                html += \"<div><a  href='\"+filename+\"'>\"+filename+\"</a></div>\";\r\n                            }\r\n                        }catch (e){\r\n                            html += \"<h1>�����ʵ�Ŀ¼������</h1>\"\r\n                        }\r\n                        response.writeHead(200, {\"content-type\": \"text/html\"});\r\n                        response.end(html);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * ��ȡ�ĵ�����������\r\n         * @param filePath\r\n         * @returns {*}\r\n         */\r\n        getContentType:function(filePath){\r\n            var contentType = this.config.mime;\r\n            var ext = path.extname(filePath).substr(1);\r\n            if (contentType.hasOwnProperty(ext)){\r\n                return contentType[ext];\r\n            }else {\r\n                return contentType.default;\r\n            }\r\n        },\r\n\r\n        ///������Ϣ\r\n        config:{\r\n            port:8888,\r\n            ip:'127.0.0.1',\r\n            mime:{\r\n                html:\"text/html\",\r\n                js:\"text/javascript\",\r\n                css:\"text/css\",\r\n                gif:\"image/gif\",\r\n                jpg:\"image/jpeg\",\r\n                png:\"image/png\",\r\n                ico:\"image/icon\",\r\n                txt:\"text/plain\",\r\n                json:\"application/json\",\r\n                default:\"application/octet-stream\"\r\n            }\r\n        }\r\n    }\r\n})();"]}